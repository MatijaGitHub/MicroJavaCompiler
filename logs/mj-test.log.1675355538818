INFO  17:32:08,137 - Compiling source file: C:\Users\Matija Milosevic\Desktop\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  17:32:08,168 - #2 program
INFO  17:32:08,168 - #49 p
INFO  17:32:08,168 - #7 const
INFO  17:32:08,169 - #49 int
INFO  17:32:08,169 - #49 size
INFO  17:32:08,169 - #36 =
INFO  17:32:08,169 - #47 10
INFO  17:32:08,169 - #37 ;
INFO  17:32:08,169 - #7 const
INFO  17:32:08,170 - #49 char
INFO  17:32:08,170 - #49 deda
INFO  17:32:08,170 - #36 =
INFO  17:32:08,170 - #50 a
INFO  17:32:08,170 - #37 ;
INFO  17:32:08,170 - #7 const
INFO  17:32:08,171 - #49 int
INFO  17:32:08,171 - #49 gegas
INFO  17:32:08,171 - #36 =
INFO  17:32:08,171 - #47 3
INFO  17:32:08,171 - #37 ;
INFO  17:32:08,171 - #7 const
INFO  17:32:08,171 - #49 bool
INFO  17:32:08,171 - #49 cond
INFO  17:32:08,171 - #36 =
INFO  17:32:08,171 - #48 false
INFO  17:32:08,171 - #37 ;
INFO  17:32:08,171 - #49 int
INFO  17:32:08,171 - #49 a
INFO  17:32:08,171 - #39 ,
INFO  17:32:08,172 - #49 b
INFO  17:32:08,173 - #39 ,
INFO  17:32:08,173 - #49 c
INFO  17:32:08,173 - #45 [
INFO  17:32:08,173 - #46 ]
INFO  17:32:08,173 - #37 ;
INFO  17:32:08,173 - #7 const
INFO  17:32:08,174 - #49 int
INFO  17:32:08,174 - #49 elem
INFO  17:32:08,175 - #36 =
INFO  17:32:08,175 - #47 3
INFO  17:32:08,175 - #37 ;
INFO  17:32:08,175 - #49 bool
INFO  17:32:08,175 - #49 se
INFO  17:32:08,175 - #37 ;
INFO  17:32:08,175 - #49 char
INFO  17:32:08,175 - #49 return_value
INFO  17:32:08,175 - #37 ;
INFO  17:32:08,175 - #43 {
INFO  17:32:08,175 - #49 int
INFO  17:32:08,176 - #49 f1
INFO  17:32:08,176 - #41 (
INFO  17:32:08,176 - #49 int
INFO  17:32:08,176 - #49 a
INFO  17:32:08,176 - #39 ,
INFO  17:32:08,176 - #49 int
INFO  17:32:08,177 - #49 b
INFO  17:32:08,177 - #39 ,
INFO  17:32:08,177 - #49 char
INFO  17:32:08,177 - #49 c
INFO  17:32:08,177 - #42 )
INFO  17:32:08,178 - #43 {
INFO  17:32:08,178 - #14 return
INFO  17:32:08,179 - #47 6
INFO  17:32:08,179 - #37 ;
INFO  17:32:08,180 - #44 }
INFO  17:32:08,180 - #49 int
INFO  17:32:08,181 - #49 f5
INFO  17:32:08,181 - #41 (
INFO  17:32:08,181 - #49 int
INFO  17:32:08,181 - #49 arr
INFO  17:32:08,182 - #39 ,
INFO  17:32:08,182 - #49 char
INFO  17:32:08,182 - #49 b
INFO  17:32:08,182 - #39 ,
INFO  17:32:08,182 - #49 bool
INFO  17:32:08,182 - #49 factor
INFO  17:32:08,182 - #42 )
INFO  17:32:08,182 - #43 {
INFO  17:32:08,182 - #49 a
INFO  17:32:08,182 - #36 =
INFO  17:32:08,182 - #49 c
INFO  17:32:08,183 - #45 [
INFO  17:32:08,183 - #47 3
INFO  17:32:08,183 - #23 +
INFO  17:32:08,183 - #47 4
INFO  17:32:08,183 - #25 *
INFO  17:32:08,184 - #47 23
INFO  17:32:08,184 - #24 -
INFO  17:32:08,184 - #49 f1
INFO  17:32:08,185 - #41 (
INFO  17:32:08,185 - #47 1
INFO  17:32:08,185 - #39 ,
INFO  17:32:08,185 - #47 55
INFO  17:32:08,185 - #39 ,
INFO  17:32:08,185 - #49 return_value
INFO  17:32:08,185 - #42 )
INFO  17:32:08,186 - #23 +
INFO  17:32:08,186 - #50 a
INFO  17:32:08,186 - #46 ]
INFO  17:32:08,186 - #37 ;
INFO  17:32:08,186 - #49 se
INFO  17:32:08,187 - #36 =
INFO  17:32:08,187 - #47 3
INFO  17:32:08,187 - #37 ;
INFO  17:32:08,187 - #49 a
INFO  17:32:08,187 - #36 =
INFO  17:32:08,187 - #49 f5
INFO  17:32:08,187 - #41 (
INFO  17:32:08,187 - #47 1
INFO  17:32:08,187 - #39 ,
INFO  17:32:08,187 - #50 a
INFO  17:32:08,187 - #39 ,
INFO  17:32:08,187 - #48 false
INFO  17:32:08,187 - #42 )
INFO  17:32:08,187 - #37 ;
INFO  17:32:08,187 - #45 [
INFO  17:32:08,187 - #49 f1
INFO  17:32:08,187 - #41 (
ERROR 17:32:08,187 - 
Sintaksna greska na liniji 19
ERROR 17:32:08,187 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 19
